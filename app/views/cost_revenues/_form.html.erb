<style type="text/css">
  .details > div{
    margin-bottom: 5px
  }
  .details input{
    margin-bottom: 0
  }
  .cost_revenue_field{
    margin-bottom: 0!important;
    border: none!important;
    padding: 0!important;
    /*float: left;*/
    float: left;
    /*min-width: 115px;*/
    /*min-width: 80px;*/
    /*max-width: 134px;*/
    /*max-width: 86px;*/
    /*width: 100%;*/
    text-align: right;
  }
  .cost_revenue_field, .cost_revenue_field:focus{
    -webkit-box-shadow: none !important;
    box-shadow: none !important; 
  }
  .cost_revenue_description{
    /*min-width: 170px;*/
    /*max-width: 275px;*/
    /*max-width: 200px;*/
    width: 90%;
    text-align: left;
  }
  .remove_cost_revenue_description {
    /*float: right;*/
    /*margin-top: -20px;*/
    position: absolute;
  }
  .cost_revenue_volume{
    margin-bottom: 0!important;
    border: none!important;
    padding: 0!important;
    float: right;
    /*min-width: 30px;*/
    /*max-width: 134px;*/
    min-width: 50px;
    width: 100%;
    text-align: right;
  }
  .cost_revenue_static{
    min-width: 80px;
    max-width: 134px;
    text-align: right;
  }
  tfoot td{
    font-weight: bold;
    text-align: center;
  }
  .selling_usd, .selling_idr, .buying_usd, .buying_idr, .selling_total, .buying_total, .selling_total_after_tax, .buying_total_after_tax{
    float: right;
    min-width: 100px;
    width: 100%;
  }
  .money_text{
    /*background-color: #FFF;*/
  }
  .details input {
    /*width: 100%;*/
    /*padding: 3px;*/
    /*box-sizing: border-box;*/
  }
  .padding{
    padding: 5px 0;
    font-weight: 700;
  }
  input:disabled{
    border-radius: 0;
  }
</style>
<%# link_to "Import Cost & Revenue Data", import_data_cost_revenues_path(ibl_ref: (params[:si_no] ? params[:si_no] :
        @cost_revenue.si_no)), class: "btn btn-primary", id: "import_cnr_data" %>
        <!-- <br/><br/> -->
<%= form_for(@cost_revenue, html: { class: "form-horizontal"}) do |f| %>
  <% if @cost_revenue.errors.any? %>
  <div class="alert alert-error">
    <ul class="unstyled">
      <% @cost_revenue.errors.full_messages.each do |msg| %>
      <li><%= msg %></li>
      <% end %>
    </ul>
  </div>
  <% end %>
  <div class="row-fluid">
    <div class="span6">
      <div class="control-group">
        <label for="" class="control-label text-left">Duplicate SI :</label>
        <div class="controls">
          <div class="input-append">
            <input type="text" id="ibl_ref" class="span12" autocomplete="off" placeholder="IBL Ref"/>
            <a href= "<%= import_data_cost_revenues_path %>" class="btn" type="button" id="import_cnr_data">Go!</a>
          </div>
        </div>
      </div>
    </div>
    <div class="span6">
    </div>
  </div>

  <div class="row-fluid">
    <div class="span6">
      <div class="control-group">
        <label for="" class="control-label text-left">IBL REF :</label>
        <div class="controls padding">
          <%= @cost_revenue.ibl_ref %>
          <%= f.hidden_field :shipping_instruction_id %>
          <%= f.hidden_field :ibl_ref %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">MBL No :</label>
        <div class="controls">
          <%= f.text_field :master_bl_no, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">SHIPPER REF :</label>
        <div class="controls">
          <%= f.text_field :shipper_reference, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">CARRIER :</label>
        <div class="controls">
          <%# f.text_field :carrier, class: "span12", autocomplete: "off" %>
          <%# f.collection_select :carrier, @carriers, :name, :name, { include_blank: "Select Carrier" }, class: "span12" %>
          <%= f.collection_select :carrier_id, @carriers, :id, :name, { include_blank: "Select Carrier" }, class: "span12" %>
          <%= f.hidden_field :carrier, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">SHIPPER :</label>
        <div class="controls">
          <%= f.collection_select :shipper_id, @shippers, :id, :company_name, { include_blank: "Select Shipper" }, class: "span12" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">CONSIGNEE :</label>
        <div class="controls">
          <%= f.collection_select :consignee_id, @consignees, :id, :company_name, { include_blank: "Select Consignee" }, class: "span12" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">TRADE :</label>
        <div class="controls">
          <%= f.text_field :trade, class: "span12", autocomplete: "off" %>
        </div>
      </div>
    </div>
    <div class="span6">
      <div class="control-group">
        <label for="" class="control-label text-left">OWNER :</label>
        <div class="controls">
          <%# f.text_field :owner, class: "span12", autocomplete: "off" %>
          <%= f.collection_select :owner_id, @owners, :id, :name, { include_blank: "Select Owner" }, class: "span12" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">VESSEL :</label>
        <div class="controls">
          <%= f.text_field :vessel_name, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">ETD :</label>
        <div class="controls">
          <%= f.text_field :etd_date, class: "span12 datepicker", value: normal_date_format(@cost_revenue.etd_date), autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">POL :</label>
        <div class="controls">
          <%= f.text_field :port_of_loading, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">POD :</label>
        <div class="controls">
          <%= f.text_field :port_of_discharge, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">DESTINATION :</label>
        <div class="controls">
          <%= f.text_field :final_destination, class: "span12", autocomplete: "off" %>
        </div>
      </div>
      <div class="control-group">
        <label for="" class="control-label text-left">VOLUME :</label>
        <div class="controls">
          <%# f.text_field :volume, class: "span12", autocomplete: "off" %>
          <% count = 0 %>
          <% Container.all.each do |c| %>
            <% next if c.container_type == "Special Equipment" %>
            <% count += 1 %>
            <% cr_container = @cost_revenue.cr_containers.where(:container_id => c.id) %>
            <% unless cr_container.blank? 
                volume = cr_container.map { |e| e.volum } 
                crc_id = cr_container.map { |e| e.id }
              else
                volume = []
                crc_id = []
              end %>
            <% @cost_revenue.cr_containers.each do |container|
                if container.container_id == c.id
                  volume = [container.volum]
                  crc_id = []
                end
              end if @cost_revenue.new_record? %>
            <% if count == 1 %>
              <table><tr>
            <% end %>
            <% if count < 5 %>
            <td>
              <input type="text" value="<%= volume[0] %>" name="cost_revenue[cr_containers_attributes][<%= count %>][volum]" id="cost_revenue_cr_containers_attributes_<%= count %>_volum" class="span2 cost_revenue_cr_containers_volum" style="margin-bottom: 10px; width:100%;">
            </td>
            <% else %>
              </tr></table>
            <input type="text" value="<%= volume[0] %>" name="cost_revenue[cr_containers_attributes][<%= count %>][volum]" id="cost_revenue_cr_containers_attributes_<%= count %>_volum" class="span4 cost_revenue_cr_containers_volum">
            <% end %>
            <% if count < 5 %>
            <td style="padding-right: 10px;">
            <% end %>
            <%= c.container_type %>
            <% if crc_id.any? %>
            <input type="hidden" value="<%= crc_id[0] %>" name="cost_revenue[cr_containers_attributes][<%= count %>][id]" id="cost_revenue_cr_containers_attributes_<%= count %>_id" class="span2">
            <% end %>
            <input type="hidden" value="<%= c.id %>" name="cost_revenue[cr_containers_attributes][<%= count %>][container_id]" id="cost_revenue_cr_containers_attributes_<%= count %>_container_id" class="span2 cost_revenue_cr_containers_container_id">
            <% if count < 5 %>
            </td>
            <% end %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <div id="revenue-description" style="margin-top: 10px">
    <table width="100%" border="1" class="revenue-table">
      <thead>
        <tr>
          <th colspan="2">&nbsp;</th>
          <th colspan="5">SELL</th>
          <th colspan="5">COST</th>
        </tr>
        <tr>
          <th rowspan="2">NO</th>
          <th rowspan="2">DESCRIPTION</th>
          <th rowspan="2">QTY</th>
          <th colspan="2">AMOUNT</th>
          <th rowspan="2">TOTAL</th>
          <th rowspan="2">TOTAL AFTER TAX</th>          
          <th rowspan="2">QTY</th>
          <th colspan="2">AMOUNT</th>
          <th rowspan="2">TOTAL</th>
          <th rowspan="2">TOTAL AFTER TAX</th>
        </tr>
        <tr>
          <th>USD</th>
          <th>IDR</th>
          <th>USD</th>
          <th>IDR</th>        
        </tr>
      </thead>
      <tbody>
        <% count = 1 %>
        <%= f.fields_for :cost_revenue_items do |builder| %>
          <%= render 'cost_revenue_item_fields', :f => builder, :count => count %>
          <% count += 1 %>
        <% end %>
      </tbody>
      <tfoot>
        <tr>
          <td colspan="5" class="text-left">OTHER</td>
          <td class="text-right">
            <%= f.text_field :selling_other, class: "cost_revenue_field money_text selling_idr selling_other", autocomplete: "off" %>
          </td>
          <td></td>
          <td colspan="3" class="text-right">OTHER</td>
          <td class="text-right">
            <%= f.text_field :buying_other, class: "cost_revenue_field money_text buying_idr buying_other", autocomplete: "off" %>
          </td>
          <td class="hidden">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="5" class="text-left">RATE</td>
          <td class="text-right">
            <%= f.text_field :selling_rate, class: "cost_revenue_field money_text selling_idr selling_rate", autocomplete: "off" %>
          </td>
          <td></td>
          <td colspan="3" class="text-right">RATE</td>
          <td class="text-right">
            <%= f.text_field :buying_rate, class: "cost_revenue_field money_text buying_idr buying_rate", autocomplete: "off" %>
          </td>
          <td class="hidden">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="5" class="text-left">VAT 10%</td>
          <td class="text-right">
            <%= f.text_field :selling_vat_10, class: "cost_revenue_field money_text selling_idr selling_vat_10", autocomplete: "off" %>
          </td>
          <td></td>
          <td colspan="3" class="text-right">VAT 10%</td>
          <td class="text-right">
            <%= f.text_field :buying_vat_10, class: "cost_revenue_field money_text buying_idr buying_vat_10", autocomplete: "off" %>
          </td>
          <td class="hidden">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="5" class="text-left"><!-- <a href="#" onclick="default_selling_vat_1=true;calculate();return false;">VAT 1%</a> -->VAT 1%</td>
          <td class="text-right">
            <%# f.text_field :selling_vat_1, class: "cost_revenue_field money_text selling_idr selling_vat_1", autocomplete: "off", disabled: "disabled", value: f.object.selling_vat_1 %>
            <%= f.text_field :selling_vat_1, class: "cost_revenue_field money_text selling_idr selling_vat_1", autocomplete: "off" %>
          </td>
          <td><%= f.text_field :default_selling_vat_1, class: "cost_revenue_field money_text selling_idr default_selling_vat_1", autocomplete: "off", disabled: "disabled" %></td>
          <td colspan="3" class="text-right">VAT 1%</td>
          <td class="text-right">
            <%= f.text_field :buying_vat_1, class: "cost_revenue_field money_text buying_idr buying_vat_1", autocomplete: "off" %>
          </td>
          <td class="hidden">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="5" class="text-left"><!-- <a href="#" onclick="default_selling_pph_23=true;calculate();return false;">PPH 23</a> -->PPH 23</td>
          <td class="text-right">
            <%= f.text_field :selling_pph_23, class: "cost_revenue_field money_text selling_idr selling_pph_23", autocomplete: "off" %>
          </td>
          <td><%= f.text_field :default_selling_pph_23, class: "cost_revenue_field money_text selling_idr default_selling_pph_23", autocomplete: "off", disabled: "disabled" %></td>
          <td colspan="3" class="text-right">PPH 23</td>
          <td class="text-right">
            <%= f.text_field :buying_pph_23, class: "cost_revenue_field money_text buying_idr buying_pph_23", autocomplete: "off" %>
          </td>
          <td class="hidden">&nbsp;</td>
        </tr>
        <tr>
          <td colspan="5" class="text-left">TOTAL INVOICE</td>
          <td id="total_selling" class="text-right"><%= f.text_field :selling_total_invoice, class: "cost_revenue_field money_text selling_idr selling_total_invoice", autocomplete: "off", disabled: "disabled" %></td>
          <td><%= f.text_field :default_selling_total_invoice, class: "cost_revenue_field money_text selling_idr default_selling_total_invoice", autocomplete: "off", disabled: "disabled" %></td>
          <td colspan="3" class="text-right">TOTAL INVOICE</td>
          <td id="total_buying" class="text-right"><%= f.text_field :buying_total_invoice, class: "cost_revenue_field money_text buying_idr buying_total_invoice", autocomplete: "off", disabled: "disabled" %></td>
          <td><%= f.text_field :default_buying_total_invoice, class: "cost_revenue_field money_text buying_idr default_buying_total_invoice", autocomplete: "off", disabled: "disabled" %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-left" style="font-weight: normal;">ADDA</td>
          <td colspan="2" class="text-right"><%= f.text_field :adda, class: "cost_revenue_field money_text selling_idr adda", autocomplete: "off" %></td>
          <td colspan="2" rowspan="5" class="text-left" style="vertical-align: top;"><a id="shipment_comparison" data-toggle="modal" href="#shipmentComparisonModal" data-no-turbolink="true">Shipment Comparison</a>
            <!-- - <a id="update_shipment_comparison">Update</a> --><br/>
            <a id="cost_comparison" data-toggle="modal" href="#costComparisonModal" data-no-turbolink="true">Cost Comparison</a><br/>
            <a id="sell_comparison" data-toggle="modal" href="#sellComparisonModal" data-no-turbolink="true">Sell Comparison</a>
          </td>
          <td colspan="5" rowspan="6" class="text-left" style="vertical-align: top;">
            <label>Notes</label>
            <%= f.text_area :notes, class: "span12 notes", style: "height:100%;width:-moz-available", rows: 4 %>
          </td>
        </tr>
        <tr>
          <td colspan="3" class="text-left" style="font-weight: normal;">ADDB</td>
          <td colspan="2" class="text-right"><%= f.text_field :addb, class: "cost_revenue_field money_text selling_idr addb", autocomplete: "off" %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-left" style="font-weight: normal;">ADDC</td>
          <td colspan="2" class="text-right"><%= f.text_field :addc, class: "cost_revenue_field money_text selling_idr addc", autocomplete: "off" %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-left">ADDT</td>
          <td colspan="2" id="addt" class="text-right"><%= f.text_field :addt, class: "cost_revenue_field money_text selling_idr addt", autocomplete: "off", disabled: "disabled" %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-left">GPT</td>
          <td colspan="2" id="gpt" class="text-right"><%= f.text_field :gpt, class: "cost_revenue_field money_text selling_idr gpt", autocomplete: "off", disabled: "disabled" %></td>
        </tr>
        <tr>
          <td colspan="3" class="text-left">NPT</td>
          <td colspan="2" id="npt" class="text-right"><%= f.text_field :npt, class: "cost_revenue_field money_text selling_idr npt", autocomplete: "off", disabled: "disabled" %></td>
          <td colspan="2"><%= f.text_field :default_npt, class: "cost_revenue_field money_text selling_idr default_npt", autocomplete: "off", disabled: "disabled" %></td>
        </tr>
      </tfoot>
    </table>
  </div>
  <div class="actions" style="margin-top: 20px">
    <button type="submit" class="btn btn-primary"><i class="icon-save"></i> Save Cost & Revenue</button>
    <a class="btn" href="<%= cost_revenues_path %>"><i class="icon-reply"></i> Back</a>
  </div>
<% end %>

<%# render "cost_revenues/notes", :@cost_revenue => @cost_revenue, :field => "cost_revenue_notes" %>
<%= render "cost_revenues/shipment_comparison", :@cost_revenue => @cost_revenue %>
<%= render "cost_revenues/cost_comparison", :@cost_revenue => @cost_revenue %>
<%= render "cost_revenues/sell_comparison", :@cost_revenue => @cost_revenue %>
<%# render "cost_revenues/cost_revenue_analysis", :@cost_revenue => @cost_revenue, :field => "cost_revenue_notes" %>


<% if @cost_revenue.new_record? %>
<script type="text/javascript">
  // $(document).ready(function(){
  //   $("#cost_revenue_si_no").typeahead({
  //     minLength: 3,
  //     source: function(query, process){
  //       $.ajax({
  //         url: "/shipping_instructions.json",
  //         dataType: "json",
  //         data: {query: query, status: 0},
  //         success: function(data){
  //           bls = [];
  //           $.each(data, function(i, bl){
  //             bls.push(bl.si_no);
  //           });
  //           return process(bls);
  //         }
  //       })
  //     }
  //   });

  //   $("#loadSI").click(function(){
  //     if($("#cost_revenue_si_no").val() != ''){
  //       $(this).button('loading');
  //       $.ajax({
  //         url: "/load-si-data",
  //         //dataType: "json",
  //         data: {query: $("#cost_revenue_si_no").val(), status: 0},
  //         success: function(data){
  //           if(data != ''){
  //             $("#cost_revenue_shipping_instruction_id").val(data.id);
  //             $("#cost_revenue_bl_si_number").val([data.si_no, data.master_bl_no].join(' / '));
  //             $("#cost_revenue_shipper_reference").val(data.shipper_reference);
  //             $("#cost_revenue_shipper").val(data.shipper);
  //             $("#cost_revenue_vessel").val(data.vessel_name);
  //             $("#cost_revenue_etd").val(data.etd_date);
  //             $("#cost_revenue_port_of_loading").val(data.port_of_loading);
  //             $("#cost_revenue_destination").val(data.final_destination);
  //             $("#cost_revenue_volume").val(data.volume);
  //             $("#cost_revenue_payment_number").val(data.payment);
  //             $("#ibl_ref_link").attr("href", data.link_to);
  //           }
  //           else{
  //             alert("Shipping Instruction didn't have bill of lading or not found...");
  //           }
  //           $("#loadSI").button('reset'); 
  //         }
  //       });
  //     }
  //     else{
  //       alert("Please enter the SI No.");
  //     }
  //   });

  //   $(function(){
  //     if($("#cost_revenue_si_no").val() != ''){
  //       $("#loadSI").trigger( "click" );
  //     }
  //   });
  // })
</script>
<% end %>
<script type="text/javascript">
  // $(document).ready(function(){
    // $("#cost_revenue_payment_no").tagsInput({
    //   'width':'100%',
    //   'height':'auto',
    //   'defaultText': 'Add Number',
    //   'minChars': 12
    // });

    // $("#cost_revenue_payment_no_tag").typeahead({
    //   source: function(query, process){
    //     $.ajax({
    //       url: "/payments-list.json",
    //       dataType: "json",
    //       data: {SI: $("#cost_revenue_si_no").val(), query: query, status: 0},
    //       success: function(data){
    //         bls = [];
    //         $.each(data, function(i, bl){
    //           bls.push(bl.payment_no);
    //         });
    //         return process(bls);
    //       }
    //     })
    //   }
    // });

    // $("#import_cnr_data").on("click", function(e) {
    //   e.preventDefault();
    //   $.getJSON($(this).attr('href'), function(data){
    //     if (data == "") {
    //       alert("No data to be imported");
    //     } else {
    //       var row_count = $("#revenue-description").find("tbody tr").length;
    //       if (data.length > row_count) {
    //         for (var i = 0; i < (data.length - row_count); i++)
    //           add_revenue_fields();
    //         add_revenue_fields();
    //         $("#import_cnr_data").trigger("click");
    //         return;
    //       }

    //       var key = "cost_revenue_cost_revenue_items_attributes_";

    //       for (var index in data) {
    //         var id = "#" + key + index;
    //         $(id + "_description").val(data[index].description);
    //         $(id + "_selling_usd").val(money_format(data[index].selling.usd)).trigger("focusout");
    //         $(id + "_selling_idr").val(money_format(data[index].selling.idr)).trigger("focusout");
    //         $(id + "_buying_usd").val(money_format(data[index].buying.usd)).trigger("focusout");
    //         $(id + "_buying_idr").val(money_format(data[index].buying.idr)).trigger("focusout");
    //       }

    //       alert("Import done...");
    //     }
    //   })
    // });

    $(".cost_revenue_description").livequery(function(){
      $(this).typeahead({
        source: [
          <% @details.each do |c| %>
            "<%= c.description %>",
          <% end %>
        ]
      });
    });

    // $(".selling_usd, .selling_idr, .buying_usd, .buying_idr").livequery(function(){
    //   $(this).focusout(function(){
    //     var total = 0;
    //     var current = $(this).attr("class").split(" ")[2];
    //     $("." + current).each(function(){
    //       var parent = $(this).parent().parent();
    //       if(!parent.hasClass("hidden")){
    //         var temp = $(this).val();
    //         total += number_format(temp);
    //       }
    //     });
    //     $("#total_" + current).text(money_format(total));
    //   });
    // });

    // $(".selling_usd, .buying_usd").livequery(function(){
    //   $(this).focusout(function(){
    //     var tr = $(this).parent().parent();
    //     var selling = tr.find("td:eq(2) input").val() == "" ? 0 : number_format(tr.find("td:eq(2) input").val());
    //     var buying = tr.find("td:eq(4) input").val() == "" ? 0 : number_format(tr.find("td:eq(4) input").val());
    //     var total = 0;
    //     tr.find("td:eq(6) input").val(money_format(selling - buying));
    //     $(".profit_usd").each(function(){
    //       var parent = $(this).parent().parent();
    //       if(!parent.hasClass("hidden")){
    //         var temp = $(this).val();
    //         total += number_format(temp);
    //       }
    //     });
    //     $("#total_profit_usd").text(money_format(total));      
    //   });
    // });

    // $(".selling_idr, .buying_idr").livequery(function(){
    //   $(this).focusout(function(){
    //     var tr = $(this).parent().parent();
    //     var selling = tr.find("td:eq(3) input").val() == "" ? 0 : number_format(tr.find("td:eq(3) input").val());
    //     var buying = tr.find("td:eq(5) input").val() == "" ? 0 : number_format(tr.find("td:eq(5) input").val());
    //     var total = 0;
    //     tr.find("td:eq(7) input").val(money_format(selling - buying));
    //     $(".profit_idr").each(function(){
    //       var parent = $(this).parent().parent();
    //       if(!parent.hasClass("hidden")){
    //         var temp = $(this).val();
    //         total += number_format(temp);
    //       }
    //     });
    //     $("#total_profit_idr").text(money_format(total));
    //   });
    // });

    // $("table tbody tr:not('.hidden'):last td:eq(1) input").livequery(function(){
    //   $(this).focusout(function(){      
    //     if($("table tbody tr:not('.hidden'):last td:eq(1) input").val() != "")
    //       add_revenue_fields();
    //   })
    // });

    $(".revenue-table tbody tr:not('.hidden'):last td:eq(1) input").livequery(function(){
      $(this).focusout(function(e){
        e.preventDefault();
        if($(".revenue-table tbody tr:not('.hidden'):last td:eq(1) input").val() != "")
          // add_revenue_fields();
          add_sell_cost_fields('active');
          // alert($(this).val());
      })
    });

    // $("#cost_revenue_carrier").typeahead({
    //   source: [
    //   <%# Carrier.all.each do |c| %>
    //   "<%# c.name %>",
    //   <%# end %>
    //   ]
    // });

    $(".selling_usd, .selling_idr, .buying_usd, .buying_idr").livequery(function(){
      $(this).focusout(function(){
        $(this).text(money_format($(this).val()));
      });
    });

    // $("#cost_revenue_carrier").change(function(){
    //   if($(this).val() != ''){
    //     $.ajax({
    //       url: '<%= get_carrier_charges_path %>',
    //       dataType: "json",
    //       data: {id: $(this).val()},
    //       success: function(data){
    //         // if(data.success){
    //         //   $(".revenue-table tr.carrier .remove_cost_revenue_description").click();
    //         //   $.each(data.charges, function(key, value) {
    //         //     add_sell_cost_fields('carrier');
    //         //     $(".cost_revenue_description").last().val(value.description);
    //         //     $(".selling_volume").last().val(value.selling_volume);
    //         //     $(".selling_usd").last().val(value.selling_usd);
    //         //     $(".selling_idr").last().val(value.selling_idr);
    //         //     $(".buying_volume").last().val(value.buying_volume);
    //         //     $(".buying_usd").last().val(value.buying_usd);
    //         //     $(".buying_idr").last().val(value.buying_idr);
    //         //   });
    //         // }
    //         // else{
    //         //   alert(data.message);
    //         // }
    //         var base = $(".revenue-table tr.carrier");
    //         if(data.success){
    //           // base.find(".remove_cost_revenue_description").click();
    //           $.each(data.charges, function(key, value) {
    //             add_sell_cost_fields('carrier');

    //             // base = $(".revenue-table tr.carrier");
    //             base = $(".revenue-table tbody tr");
    //             base.last().find(".cost_revenue_description").val(value.description);
    //             // base.last().find(".selling_volume").val(1);
    //             // base.last().find(".selling_usd").val(value.amount_usd);
    //             // base.last().find(".selling_idr").val(value.amount_idr);
    //             base.last().find(".buying_volume").val(1);
    //             base.last().find(".buying_usd").val(value.amount_usd);
    //             base.last().find(".buying_idr").val(value.amount_idr);
    //             base.last().find(".item_type").val(value.item_type);
    //           });

    //           calculate();
    //         }
    //         else{
    //           alert(data.message);
    //         }
    //       }
    //     });
    //   }
    // });

    $("#cost_revenue_carrier_id").change(function(){
      if($(this).val() != ''){
        $.ajax({
          url: '<%= get_carrier_charges_path %>',
          dataType: "json",
          data: {id: $(this).val()},
          success: function(data){
            // if(data.success){
            //   $(".revenue-table tr.carrier .remove_cost_revenue_description").click();
            //   $.each(data.charges, function(key, value) {
            //     add_sell_cost_fields('carrier');
            //     $(".cost_revenue_description").last().val(value.description);
            //     $(".selling_volume").last().val(value.selling_volume);
            //     $(".selling_usd").last().val(value.selling_usd);
            //     $(".selling_idr").last().val(value.selling_idr);
            //     $(".buying_volume").last().val(value.buying_volume);
            //     $(".buying_usd").last().val(value.buying_usd);
            //     $(".buying_idr").last().val(value.buying_idr);
            //   });
            // }
            // else{
            //   alert(data.message);
            // }
            var base = $(".revenue-table tr.carrier");
            if(data.success){
              // base.find(".remove_cost_revenue_description").click();
              $.each(data.charges, function(key, value) {
                add_sell_cost_fields('carrier');

                // base = $(".revenue-table tr.carrier");
                base = $(".revenue-table tbody tr");
                base.last().find(".cost_revenue_description").val(value.description);
                // base.last().find(".selling_volume").val(1);
                // base.last().find(".selling_usd").val(value.amount_usd);
                // base.last().find(".selling_idr").val(value.amount_idr);
                base.last().find(".buying_volume").val(1);
                base.last().find(".buying_usd").val(value.amount_usd);
                base.last().find(".buying_idr").val(value.amount_idr);
                base.last().find(".item_type").val(value.item_type);
              });

              calculate();
            }
            else{
              alert(data.message);
            }
          }
        });
      }
    });

    $("#cost_revenue_shipper_id").change(function(){
      if($(this).val() != ''){
        $.ajax({
          url: '<%= get_shipper_charges_path %>',
          dataType: "json",
          data: {id: $(this).val()},
          success: function(data){
            var base = $(".revenue-table tr.shipper");
            if(data.success){
              // base.find(".remove_cost_revenue_description").click();
              $.each(data.charges, function(key, value) {
                add_sell_cost_fields('shipper');
                
                // base = $(".revenue-table tr.shipper");
                base = $(".revenue-table tbody tr");
                base.last().find(".cost_revenue_description").val(value.description);
                base.last().find(".selling_volume").val(1);
                base.last().find(".selling_usd").val(value.amount_usd);
                base.last().find(".selling_idr").val(value.amount_idr);
                // base.last().find(".buying_volume").val(1);
                // base.last().find(".buying_usd").val(value.amount_usd);
                // base.last().find(".buying_idr").val(value.amount_idr);
                base.last().find(".item_type").val(value.item_type);
              });

              calculate();
            }
            else{
              alert(data.message);
            }
          }
        });
      }
    });

    $("#import_cnr_data").on("click", function(e) {
      e.preventDefault();
      if($('#ibl_ref').val() == ''){
        return
      }
      $("#loading").show();
      // $.getJSON($(this).attr('href')+'&ibl_ref='+$('#ibl_ref').val(), function(data){
      $.ajax({
        url: '<%= import_data_cost_revenues_path %>',
        type: 'GET',
        dataType: "json",
        data: {ibl_ref: $('#ibl_ref').val()},
        success: function(data){
          $("#loading").hide();
          if(data.success) {
            var table = $(".revenue-table");
            var tbody = table.find("tbody");
            tbody.find("tr .remove_cost_revenue_description").click();

            var tfoot = table.find("tfoot");
            
            $.each(data.items, function(key, value) {
              add_sell_cost_fields('active');
              
              rows = $(".revenue-table tbody tr");
              rows.last().find(".cost_revenue_description").val(value.description);
              rows.last().find(".selling_volume").val(volume_format(value.selling_volume));
              rows.last().find(".selling_usd").val(money_format(value.selling_usd));
              rows.last().find(".selling_idr").val(money_format(value.selling_idr));
              rows.last().find(".selling_total_after_tax").val(money_format(value.selling_total_after_tax));
              rows.last().find(".buying_volume").val(volume_format(value.buying_volume));
              rows.last().find(".buying_usd").val(money_format(value.buying_usd));
              rows.last().find(".buying_idr").val(money_format(value.buying_idr));
              rows.last().find(".buying_total_after_tax").val(money_format(value.buying_total_after_tax));
              rows.last().find(".item_type").val(value.item_type);
            });

            tfoot.find(".selling_other").val(money_format(data.selling_other));
            tfoot.find(".selling_rate").val(money_format(data.selling_rate));
            tfoot.find(".selling_vat_10").val(money_format(data.selling_vat_10));
            tfoot.find(".selling_vat_1").val(money_format(data.selling_vat_1));
            tfoot.find(".selling_pph_23").val(money_format(data.selling_pph_23));

            tfoot.find(".buying_other").val(money_format(data.buying_other));
            tfoot.find(".buying_rate").val(money_format(data.buying_rate));
            tfoot.find(".buying_vat_10").val(money_format(data.buying_vat_10));
            tfoot.find(".buying_vat_1").val(money_format(data.buying_vat_1));
            tfoot.find(".buying_pph_23").val(money_format(data.buying_pph_23));

            tfoot.find(".adda").val(money_format(data.adda));
            tfoot.find(".addb").val(money_format(data.addb));
            tfoot.find(".addc").val(money_format(data.addc));
            
            tfoot.find(".notes").val(data.notes);

            tbody.find("tr:not('.hidden') .remove_cost_revenue_description").first().click();

            calculate();
            alert("Import done...");
          } else {
            alert(data.message);
          }
        }
      });
    });

    $(".money_text, .volume_text").livequery(function(){
      $(this).focusout(function(){
        calculate();
      });
    });
    
    // $(".selling_volume, .selling_usd, .selling_idr, .buying_volume, .buying_usd, .buying_idr").livequery(function(){
    //   $(this).focusout(function(){
    //     calculate();
    //   });
    // });

    // $("#update_sell_comparison").on("click", function(e) {
    //   e.preventDefault();
    //   var base = $("#sellComparisonModal");
    //   var invoice_table = base.find(".invoice-table");
    //   invoice_table.find("tbody tr.diff").each(function(){
    //     parent = $(this);
    //     desc = parent.find(".description").text();
    //     volume = number_format(parent.find(".volume").text());
    //     amount_usd = number_format(parent.find(".amount_usd").text());
    //     amount_idr = number_format(parent.find(".amount_idr").text());
    //     total = number_format(parent.find(".total").text());
    //     total_after_tax = number_format(parent.find(".total_after_tax").text());
        
    //     add_sell_cost_fields('active');
        
    //     base = $(".revenue-table tbody tr");
    //     base.last().find(".cost_revenue_description").val(desc);
    //     base.last().find(".selling_volume").val(volume);
    //     base.last().find(".selling_usd").val(amount_usd);
    //     base.last().find(".selling_idr").val(amount_idr);
    //     base.last().find(".selling_total_after_tax").val(total_after_tax);
    //     base.last().find(".buying_volume").val(0);
    //     base.last().find(".buying_usd").val(0);
    //     base.last().find(".buying_idr").val(0);
    //     // base.last().find(".item_type").val(item_type);
    //   });
    //   invoice_table.find("tfoot tr").each(function(i){
    //     parent = $(this);
    //     desc = parent.find("td:eq(1)").text();
    //     total = number_format(parent.find("td:eq(2)").text());
        
    //     base = $(".revenue-table tfoot tr:eq("+i+")");
    //     base.find("td:eq(1) input").val(total);
    //   });
    //   calculate();
    //   alert("Update done...");
    // });

    // $("#update_cost_comparison").on("click", function(e) {
    //   e.preventDefault();
    //   var base = $("#costComparisonModal");
    //   var invoice_table = base.find(".invoice-table");
    //   invoice_table.find("tbody tr.diff").each(function(){
    //     parent = $(this);
    //     desc = parent.find(".description").text();
    //     volume = number_format(parent.find(".volume").text());
    //     amount_usd = number_format(parent.find(".amount_usd").text());
    //     amount_idr = number_format(parent.find(".amount_idr").text());
    //     total = number_format(parent.find(".total").text());
    //     total_after_tax = number_format(parent.find(".total_after_tax").text());
        
    //     add_sell_cost_fields('active');
        
    //     base = $(".revenue-table tbody tr");
    //     base.last().find(".cost_revenue_description").val(desc);
    //     base.last().find(".selling_volume").val(0);
    //     base.last().find(".selling_usd").val(0);
    //     base.last().find(".selling_idr").val(0);
    //     base.last().find(".buying_volume").val(volume);
    //     base.last().find(".buying_usd").val(amount_usd);
    //     base.last().find(".buying_idr").val(amount_idr);
    //     base.last().find(".buying_total_after_tax").val(total_after_tax);
    //     // base.last().find(".item_type").val(item_type);
    //   });
    //   invoice_table.find("tfoot tr").each(function(i){
    //     parent = $(this);
    //     desc = parent.find("td:eq(1)").text();
    //     total = number_format(parent.find("td:eq(2)").text());
        
    //     base = $(".revenue-table tfoot tr:eq("+i+")");
    //     base.find("td:eq(4) input").val(total);
    //   });
    //   calculate();
    //   alert("Update done...");
    // });

    $("#cost_revenue_cr_containers_attributes_1_volum").on("change", function(e) {
      var volum = number_format($(this).val());

      var table = $(".revenue-table");
      var tbody = table.find("tbody");
      var rows = tbody.find("tr:not('.hidden')");
      
      rows.each(function(){
        var parent = $(this);
        if(parent.find(".cost_revenue_description").val() == "LCL"){
          parent.find(".selling_volume").val(volume_format(volum));
          parent.find(".buying_volume").val(volume_format(volum));
        }
      });
      add_volume_description("LCL", volum);

      calculate();
    });

    $("#cost_revenue_cr_containers_attributes_2_volum").on("change", function(e) {
      var volum = number_format($(this).val());

      var table = $(".revenue-table");
      var tbody = table.find("tbody");
      var rows = tbody.find("tr:not('.hidden')");
      
      rows.each(function(){
        var parent = $(this);
        if(parent.find(".cost_revenue_description").val() == "OF 20'" || parent.find(".cost_revenue_description").val() == "THC 20'" ){
          parent.find(".selling_volume").val(volume_format(volum));
          parent.find(".buying_volume").val(volume_format(volum));
        }
      });
      add_volume_description("OF 20'", volum);
      add_volume_description("THC 20'", volum);

      calculate();
    });

    $("#cost_revenue_cr_containers_attributes_3_volum").on("change", function(e) {
      var volum = number_format($(this).val());

      var table = $(".revenue-table");
      var tbody = table.find("tbody");
      var rows = tbody.find("tr:not('.hidden')");
      
      rows.each(function(){
        var parent = $(this);
        if(parent.find(".cost_revenue_description").val() == "OF 40'" || parent.find(".cost_revenue_description").val() == "THC 40'" ){
          parent.find(".selling_volume").val(volume_format(volum));
          parent.find(".buying_volume").val(volume_format(volum));
        }
      });
      add_volume_description("OF 40'", volum);
      add_volume_description("THC 40'", volum);

      calculate();
    });

    $("#cost_revenue_cr_containers_attributes_4_volum").on("change", function(e) {
      var volum = number_format($(this).val());

      var table = $(".revenue-table");
      var tbody = table.find("tbody");
      var rows = tbody.find("tr:not('.hidden')");
      
      rows.each(function(){
        var parent = $(this);
        if(parent.find(".cost_revenue_description").val() == "OF 40HC" || parent.find(".cost_revenue_description").val() == "THC 40HC" ){
          parent.find(".selling_volume").val(volume_format(volum));
          parent.find(".buying_volume").val(volume_format(volum));
        }
      });
      add_volume_description("OF 40HC", volum);
      add_volume_description("THC 40HC", volum);

      calculate();
    });
  // })
</script>
<script type="text/javascript">
  // var default_selling_vat_1, default_selling_pph_23;
  function calculate(){
    var table = $(".revenue-table");
    var tbody = table.find("tbody");
    var rows = tbody.find("tr:not('.hidden')");
    var tfoot = table.find("tfoot");
    var sum_selling_total = 0;
    var sum_buying_total = 0;
    var sum_selling_total_after_tax = 0;
    var sum_buying_total_after_tax = 0;
    
    // var selling_rate = number_format($("#cost_revenue_selling_rate").val());
    var selling_rate = number_format(tfoot.find(".selling_rate").val());
    selling_rate = selling_rate == 0 ? 1 : selling_rate;

    // var buying_rate = number_format($("#cost_revenue_buying_rate").val());
    var buying_rate = number_format(tfoot.find(".buying_rate").val());
    buying_rate = buying_rate == 0 ? 1 : buying_rate;

    var parent, selling_volume, selling_usd, selling_idr, buying_volume, buying_usd, buying_idr, selling_total, buying_total;    
    rows.each(function(){
      parent = $(this);
      selling_volume = number_format(parent.find(".selling_volume").val());
      selling_usd = number_format(parent.find(".selling_usd").val());
      selling_idr = number_format(parent.find(".selling_idr").val());
      
      buying_volume = number_format(parent.find(".buying_volume").val());
      buying_usd = number_format(parent.find(".buying_usd").val());
      buying_idr = number_format(parent.find(".buying_idr").val());
      
      selling_total = 0;
      buying_total = 0;
      if(selling_usd != 0)
        selling_total = selling_volume * selling_usd * selling_rate;
      else
        selling_total = selling_volume * selling_idr;

      if(buying_usd != 0)
        buying_total = buying_volume * buying_usd * buying_rate;
      else
        buying_total = buying_volume * buying_idr;

      parent.find(".selling_total").val(money_format(selling_total));
      parent.find(".buying_total").val(money_format(buying_total));

      sum_selling_total += selling_total;
      sum_buying_total += buying_total;
      // selling_total_invoice += number_format(parent.find(".selling_total").val());
      // buying_total_invoice += number_format(parent.find(".buying_total").val());

      sum_selling_total_after_tax += number_format(parent.find(".selling_total_after_tax").val());
      sum_buying_total_after_tax += number_format(parent.find(".buying_total_after_tax").val());
    });

    var selling_other = number_format(tfoot.find(".selling_other").val());
    var selling_vat_10 = number_format(tfoot.find(".selling_vat_10").val());
    var selling_vat_1 = number_format(tfoot.find(".selling_vat_1").val());
    var selling_pph_23 = number_format(tfoot.find(".selling_pph_23").val());

    var buying_other = number_format(tfoot.find(".buying_other").val());
    var buying_vat_10 = number_format(tfoot.find(".buying_vat_10").val());
    var buying_vat_1 = number_format(tfoot.find(".buying_vat_1").val());
    var buying_pph_23 = number_format(tfoot.find(".buying_pph_23").val());

    // selling_total_invoice += selling_other;
    // selling_total_invoice += buying_other;

    // if(default_selling_vat_1){
    //   selling_vat_1 = selling_total_invoice / 101;
    //   tfoot.find(".selling_vat_1").val(money_format(selling_vat_1));
    //   default_selling_vat_1 = false;
    // }
    // if(default_selling_pph_23){
    //   selling_pph_23 = selling_total_invoice * (-0.02);
    //   tfoot.find(".selling_pph_23").val(money_format(selling_pph_23));
    //   default_selling_pph_23 = false;
    // }

    var default_selling_vat_1, default_selling_pph_23, default_selling_total_invoice, default_npt;    
    default_selling_vat_1 = sum_selling_total / 101;
    tfoot.find(".default_selling_vat_1").val(money_format(default_selling_vat_1));
    default_selling_pph_23 = sum_selling_total * (-0.02);
    tfoot.find(".default_selling_pph_23").val(money_format(default_selling_pph_23));

    var selling_total_invoice = sum_selling_total_after_tax + selling_other + selling_vat_10 + selling_vat_1 + selling_pph_23;
    // var buying_total_invoice = sum_buying_total + buying_other + buying_vat_10 + buying_vat_1 - buying_pph_23;
    var buying_total_invoice = sum_buying_total_after_tax + buying_other + buying_vat_10 + buying_vat_1;

    tfoot.find(".selling_total_invoice").val(money_format(selling_total_invoice));
    tfoot.find(".buying_total_invoice").val(money_format(buying_total_invoice));

    var default_selling_total_invoice = sum_selling_total + selling_other - selling_vat_10 - default_selling_vat_1 + default_selling_pph_23;
    tfoot.find(".default_selling_total_invoice").val(money_format(default_selling_total_invoice));

    // var default_buying_total_invoice = sum_buying_total_after_tax + buying_other + buying_vat_10 + buying_vat_1 - buying_pph_23;
    var default_buying_total_invoice = sum_buying_total + buying_other + buying_vat_10 + buying_vat_1;
    tfoot.find(".default_buying_total_invoice").val(money_format(default_buying_total_invoice));
        
    var adda = number_format(tfoot.find(".adda").val());
    var addb = number_format(tfoot.find(".addb").val());
    var addc = number_format(tfoot.find(".addc").val());
    var addt = adda + addb + addc;
    // tfoot.find(".adda").val(money_format(adda));
    // tfoot.find(".addb").val(money_format(addb));
    // tfoot.find(".addc").val(money_format(addc));
    tfoot.find(".addt").val(money_format(addt));

    // var gpt = selling_total_invoice - buying_total_invoice;
    // var gpt = selling_total_invoice - default_buying_total_invoice;
    var gpt = selling_total_invoice - buying_total_invoice;
    var npt = gpt - addt;
    tfoot.find(".gpt").val(money_format(gpt));
    tfoot.find(".npt").val(money_format(npt));

    // var default_npt = default_selling_total_invoice - buying_total_invoice - addt;
    var default_npt = default_selling_total_invoice - default_buying_total_invoice - addt;
    tfoot.find(".default_npt").val(money_format(default_npt));
  }
  
  function add_volume_description(desc, qty){
    var table = $(".revenue-table");
    var tbody = table.find("tbody");
    var rows = tbody.find("tr:not('.hidden')");
    
    var append = true;
    rows.each(function(){
      var parent = $(this);
      if(parent.find(".cost_revenue_description").val() == desc) append = false;
    });

    if(append){
      add_sell_cost_fields('active');
      
      var base = $(".revenue-table tbody tr");
      base.last().find(".cost_revenue_description").val(desc);
      base.last().find(".selling_volume").val(volume_format(qty));
      base.last().find(".selling_usd").val(0);
      base.last().find(".selling_idr").val(0);
      base.last().find(".buying_volume").val(volume_format(qty));
      base.last().find(".buying_usd").val(0);
      base.last().find(".buying_idr").val(0);
      // base.last().find(".buying_total_after_tax").val(total_after_tax);
      // base.last().find(".item_type").val(item_type);
    }
  }
  
  add_sell_cost_fields('active');
</script>